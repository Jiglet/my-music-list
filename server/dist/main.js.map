{"version":3,"sources":["./src/app/features/home/home.component.ts","./src/app/features/home/home.component.html","./src/app/models/user.ts","./src/app/services/alert.service.ts","./src/app/features/songs/songs.component.ts","./src/app/features/songs/songs.component.html","./src/app/core/header/header.component.ts","./src/app/core/header/header.component.html","./src/environments/environment.ts","./src/app/core/jwt.interceptor.ts","./src/app/features/song-detail/song-detail.component.ts","./src/app/features/song-detail/song-detail.component.html","./src/app/components/alert/alert.component.ts","./src/app/components/alert/alert.component.html","./src/app/core/auth.guard.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/models/index.ts","./src/app/models/alert.ts","./src/app/app.module.ts","./src/app/services/songs.service.ts","./src/app/account/register/register.component.ts","./src/app/account/register/register.component.html","./src/app/account/login/login.component.ts","./src/app/account/login/login.component.html","./src/app/services/account.service.ts","./src/app/material/material.module.ts","./src/app/services/index.ts","./src/app/features/my-list/my-list.component.ts","./src/app/features/my-list/my-list.component.html","./src/app/app-routing.module.ts","./src/app/core/error.interceptor.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h2 class=\"text-center\">Welcome to my music list</h2>","export class User {\r\n    id: string;\r\n    username: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    token: string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { Alert, AlertType } from '../models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private defaultId = 'default-alert';\r\n\r\n    // enable subscribing to alerts observable\r\n    onAlert(id = this.defaultId): Observable<Alert> {\r\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\r\n    }\r\n\r\n    // convenience methods\r\n    success(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\r\n    }\r\n\r\n    error(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\r\n    }\r\n\r\n    info(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\r\n    }\r\n\r\n    warn(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\r\n    }\r\n\r\n    // main alert method    \r\n    alert(alert: Alert) {\r\n        alert.id = alert.id || this.defaultId;\r\n        this.subject.next(alert);\r\n    }\r\n\r\n    // clear alerts\r\n    clear(id = this.defaultId) {\r\n        this.subject.next(new Alert({ id }));\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { flatMap, mergeMap, switchMap } from 'rxjs/operators';\r\nimport { SongsService } from 'src/app/services/songs.service';\r\nimport { Song } from '../../models/song'\r\n\r\n@Component({\r\n  selector: 'app-songs',\r\n  templateUrl: './songs.component.html',\r\n  styleUrls: ['./songs.component.css']\r\n})\r\nexport class SongsComponent implements OnInit {\r\n\r\n  constructor(private router: Router, private songsService: SongsService) { }\r\n\r\n  songs: Song[] = []\r\n\r\n  getFeedback() {\r\n    this.songs.forEach(song => {\r\n      let id = {id: song['id']}\r\n      // console.log('id: '+JSON.stringify(id))\r\n      this.songsService.getTrackReviews(id).subscribe(data => {\r\n        let feedback = data\r\n        song['likes'] = feedback['likes']\r\n        song['rating'] = feedback['rating'] >= 0 ? (Math.round(feedback['rating'] * 100) / 100).toFixed(2).toString() : 'No ratings yet'\r\n        song['ratings'] = feedback['ratings']\r\n        song['reviews'] = feedback['reviews']\r\n      });\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.songsService.getUSTop50().subscribe(data => {\r\n      let temp = data['data']['tracks']['items']\r\n\r\n      // Parsing the JSON data into songs\r\n      this.songs = temp.map(track => { \r\n        //console.log('track: '+JSON.stringify(track,null,2))\r\n        let newSong: Song = { \r\n          id: track['track']['id'], \r\n          name: track['track']['name'],\r\n          artists: track['track']['artists'].map(x => x['name']),\r\n          album: track['track']['album']['name'],\r\n          release_date: track['track']['album']['release_date'],\r\n          smImage: track['track']['album']['images']['0']['url'],\r\n          medImage: track['track']['album']['images']['1']['url'],\r\n          lgImage: track['track']['album']['images']['2']['url'],\r\n          likes: 0,\r\n          rating: 'No ratings yet',\r\n          ratings: 0,\r\n          reviews: 0,\r\n        }  \r\n        return newSong\r\n      })\r\n      //console.log('songs: '+JSON.stringify(this.songs,null,2))\r\n      this.getFeedback();\r\n    }),\r\n    error => {\r\n      throw error;\r\n    };\r\n\r\n    \r\n  }\r\n}\r\n","<h1>US Top 50</h1>\r\n<div *ngFor=\"let song of songs\"> \r\n    <div class=\"card song-list-item\">\r\n        <div class=\"row no-gutters\">\r\n            <div class=\"col-auto\">\r\n                <img [src]=\"song['medImage']\" class=\"img-fluid thumbnail\" alt=\"\">\r\n            </div>\r\n            <div class=\"col\">\r\n                <div class=\"card-block px-2\">\r\n                    <h2 class=\"card-title song-title\">{{ song['name'] }}</h2>\r\n                    <h4 class=\"card-subtitle mb-2\">{{ song['album'] }}</h4>\r\n                    <p> User Rating: {{song['rating']}}</p>\r\n                    <a [routerLink]=\"'/track/' + song['id']\" class=\"btn btn-primary\">Rate it</a>\r\n                </div>\r\n            </div>\r\n            <div class=\"ml-auto mr-3\">\r\n                <p> Likes: {{song['likes']}}</p>\r\n                <p> Reviews: {{song['reviews']}}</p>\r\n                <p> Ratings: {{song['ratings']}}</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-footer w-100 text-muted\">\r\n            <span *ngFor=\"let artist of song['artists']; let isLast=last\">\r\n                    {{artist}}{{isLast ? '' : ', '}}\r\n            </span>\r\n            \r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { User } from 'src/app/models/user';\r\nimport { AccountService } from '../../services';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  @Input()\r\n  user: User;\r\n\r\n  constructor(private accountService: AccountService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout() {\r\n    this.accountService.logout();\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a class=\"navbar-brand\" href=\"#\">MML</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n    <ul class=\"navbar-nav\">\r\n      <li class=\"nav-item active\">\r\n          <a class=\"nav-item nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n          <a class=\"nav-item nav-link\" routerLink=\"/songs\" routerLinkActive=\"active\">Songs</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n          <a class=\"nav-item nav-link\" routerLink=\"/myList\" routerLinkActive=\"active\">My List</a>\r\n      </li>\r\n      <li class=\"nav-item dropdown navbar-nav text-right\">\r\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          {{ user.username }}\r\n        </a>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n          <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:4000'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { AccountService } from '../services';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add auth header with jwt if user is logged in and request is to the api url\r\n        const user = this.accountService.userValue;\r\n        const isLoggedIn = user && user.token;\r\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n        if (isLoggedIn && isApiUrl) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${user.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { forkJoin } from 'rxjs';\r\nimport { SongsService } from 'src/app/services/songs.service';\r\nimport { Song } from '../../models/song'\r\nimport { User } from 'src/app/models/user';\r\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { AccountService } from 'src/app/services';\r\n\r\n@Component({\r\n  selector: 'app-song-detail',\r\n  templateUrl: './song-detail.component.html',\r\n  styleUrls: ['./song-detail.component.css']\r\n})\r\nexport class SongDetailComponent implements OnInit {\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute, private songsService: SongsService, private accountService: AccountService) { }\r\n  reviewForm: FormGroup; \r\n  song: Song;\r\n  details = [];\r\n  userReviews = [];\r\n\r\n  rated: Boolean;\r\n  rate = 0;\r\n  review = '';\r\n  reviewedDate = '';\r\n  ratingStatus = 'Not yet rated';\r\n  \r\n\r\n  ngOnInit(): void {\r\n    // Init FormGroup instance\r\n    this.reviewForm = new FormGroup({          \r\n      'rating':new FormControl(null, Validators.required), \r\n      'reviewContent':new FormControl('', Validators.required)\r\n    })\r\n\r\n    // Get song data\r\n    let spotifyID = this.route.snapshot.url[1]\r\n    forkJoin([this.songsService.getTrack(spotifyID), this.songsService.getTrackReviews({id: spotifyID.path})]).subscribe(([songData, reviewData]) => {\r\n      // console.log('reviewData:' +JSON.stringify(reviewData));\r\n      this.song = { \r\n        id: songData['data']['id'], \r\n        name: songData['data']['name'],\r\n        artists: songData['data']['artists'].map(x => x['name']),\r\n        album: songData['data']['album']['name'],\r\n        release_date: songData['data']['album']['release_date'],\r\n        smImage: songData['data']['album']['images']['0']['url'],\r\n        medImage: songData['data']['album']['images']['1']['url'],\r\n        lgImage: songData['data']['album']['images']['2']['url'],\r\n        likes: reviewData['likes'],\r\n        rating: (Math.round(reviewData['rating'] * 100) / 100).toFixed(2).toString(),\r\n        ratings: reviewData['ratings'],\r\n        reviews: reviewData['reviews'],\r\n      }\r\n      console.log(JSON.stringify(this.song,null,2));\r\n      this.userReviews = reviewData['userReviews']\r\n      console.log('this.reviews: '+JSON.stringify(this.userReviews))\r\n    },\r\n    error => {\r\n      throw error\r\n    });\r\n\r\n    // Get reviews for current song\r\n\r\n\r\n    // Get user data\r\n    let user = JSON.parse(this.accountService.getUser());\r\n    let request = { userID: user['id'], spotifyID: this.route.snapshot.url[1].path }\r\n    this.songsService.getUserSongData(request).subscribe(data => {\r\n      console.log('DATA: '+JSON.stringify(data))\r\n      if (data['rated']) {\r\n        this.rate = data['rating']\r\n        this.review = data['review']\r\n        this.reviewedDate = data['date']\r\n        this.ratingStatus = 'Thanks for rating!'\r\n        this.rated = true\r\n      } else { // User has not yet rated\r\n        console.log('user hasnt rated yet')\r\n      }\r\n    })\r\n  }\r\n\r\n  submitRating(rate): void {\r\n    // Get user data to send in request\r\n    let user = JSON.parse(this.accountService.getUser());\r\n    let request = {\r\n      userID: user[\"id\"],\r\n      username: user['username'],\r\n      spotifyID: this.route.snapshot.url[1].path,\r\n      rating: rate\r\n    }\r\n\r\n    // If user already rated, send edit request, otherwise send submit\r\n    if (this.rated) {\r\n      this.songsService.editRating(request).subscribe(data => {\r\n        if(data['success']) {\r\n          this.ratingStatus = 'Rating updated!';\r\n          this.rated = true;\r\n        } else {\r\n          this.ratingStatus = 'Something went wrong';\r\n        }\r\n      })\r\n    } else {\r\n      this.songsService.submitRating(request).subscribe(data => {\r\n        if(data['success']) {\r\n          this.ratingStatus = 'Thanks for rating!';\r\n          this.rated = true;\r\n        } else {\r\n          this.ratingStatus = 'Something went wrong';\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  submitReview(): void {\r\n    let user = JSON.parse(this.accountService.getUser());\r\n    let rating = this.reviewForm.get('rating').value\r\n    let reviewContent = this.reviewForm.get('reviewContent').value\r\n\r\n    let request = {\r\n      userID: user[\"id\"],\r\n      username: user['username'],\r\n      spotifyID: this.route.snapshot.url[1].path,\r\n      rating: rating,\r\n      reviewContent: reviewContent\r\n    }\r\n\r\n    this.songsService.submitReview(request).subscribe(data => {\r\n      if(data['success']) {\r\n        this.ratingStatus = 'Thanks for reviewing!';\r\n        this.rated = true;\r\n      } else {\r\n        this.ratingStatus = 'Something went wrong';\r\n      }\r\n    })\r\n\r\n    this.rate = rating\r\n  }\r\n\r\n}\r\n","<div class=\"container detail-container\">\r\n    <div class=\"row\">\r\n        <div *ngIf=\"song\" >\r\n            <h1 class=\"card-title\">\r\n                <span class=\"song-title\">{{ song['name'] }} </span>\r\n                <small class=\"text-muted\">by <span *ngFor=\"let artist of song['artists']; let isLast=last\">{{artist}}{{isLast ? '' : ', '}}</span></small>\r\n            </h1>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div *ngIf=\"song\" class=\"col-sm-3\">\r\n            <img [src]=\"song['medImage']\" class=\"albumCover\" alt=\"\">\r\n            <h4 class=\"text-center\">Album: {{ song['album'] }}</h4>\r\n        </div>\r\n\r\n        <div class=\"col-sm-6\">\r\n            <!--Song details-->\r\n            \r\n            \r\n            <!--Rating-->\r\n            <div *ngIf=\"song\" class=\"card text-white bg-info mb-3\" style=\"max-width: 18rem;\">\r\n                <div class=\"card-header\">\r\n                    <h1 class=\"card-title\">\r\n                        <span class=\"userRating\">{{ song['rating'] }} </span>\r\n                        <small>User Score</small>\r\n                    </h1>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                  <p class=\"card-text\">{{ song['ratings'] }} user ratings</p>\r\n                  <p class=\"card-text\">{{ song['reviews'] }} user reviews</p>\r\n                  <p class=\"card-text\">{{ song['likes'] }} likes</p>\r\n                </div>\r\n              </div>\r\n            <div>\r\n                \r\n            </div>\r\n\r\n            <!--Reviews-->\r\n            <div>\r\n                <h3>Recent Reviews</h3>\r\n                <div *ngFor=\"let review of userReviews\" class=\"card bg-light mb-3\" style=\"max-width: 18rem;\">\r\n                    <div class=\"card-header\">{{ review['username'] }}</div>\r\n                    <div class=\"card-body\">\r\n                        <rating [readonly]=\"true\" [ngModel]=\"review['rating']\"></rating>\r\n                      <h5 class=\"card-title\">{{ review['rating'] }}</h5>\r\n                      <p class=\"card-text\">{{ review['review'] }}</p>\r\n                    </div>\r\n                  </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!--Rating Widget-->\r\n        <div class=\"col-sm-3\">\r\n            <div class=\"card\" style=\"width: 200px;\">\r\n                <div class=\"card-body text-center\">\r\n                    <h3 class=\"card-title text-center\">Rate</h3>\r\n                    <rating [(ngModel)]=\"rate\" (click)=\"submitRating(rate)\" [max]=\"5\"></rating>\r\n                    <p> {{ ratingStatus }} </p>\r\n                </div>\r\n                <ul class=\"list-group list-group-flush\">\r\n                    <a href=\"#\" data-toggle=\"modal\" data-target=\"#exampleModal\" ><li class=\"list-group-item text-center\">Write a Review</li></a>\r\n                    <a href=\"#\"><li class=\"list-group-item text-center\">Add to a list</li></a>\r\n                    <a href=\"#\"><li class=\"list-group-item text-center\">Share</li></a>\r\n                </ul>\r\n              </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n            <h4 class=\"modal-title\" id=\"exampleModalLabel\">Write a Review...</h4><br/>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <form class=\"container\" [formGroup]=\"reviewForm\" (ngSubmit)=\"submitReview()\">\r\n                <div class=\"card-body text-center\">\r\n                    <h3 class=\"card-title text-center\">Rate</h3>\r\n                    <rating formControlName=\"rating\" (rate)=\"rate\" [max]=\"5\" required></rating>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <textarea formControlName=\"reviewContent\" class=\"form-control\" id=\"message-text\" required></textarea>\r\n                </div>\r\n\r\n                <button type=\"submit\" [disabled]=\"!reviewForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Alert, AlertType } from '../../models';\r\nimport { AlertService } from '../../services';\r\n\r\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n    @Input() id = 'default-alert';\r\n    @Input() fade = true;\r\n\r\n    alerts: Alert[] = [];\r\n    alertSubscription: Subscription;\r\n    routeSubscription: Subscription;\r\n\r\n    constructor(private router: Router, private alertService: AlertService) { }\r\n\r\n    ngOnInit() {\r\n        // subscribe to new alert notifications\r\n        this.alertSubscription = this.alertService.onAlert(this.id)\r\n            .subscribe(alert => {\r\n                // clear alerts when an empty alert is received\r\n                if (!alert.message) {\r\n                    // filter out alerts without 'keepAfterRouteChange' flag\r\n                    this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\r\n\r\n                    // remove 'keepAfterRouteChange' flag on the rest\r\n                    this.alerts.forEach(x => delete x.keepAfterRouteChange);\r\n                    return;\r\n                }\r\n\r\n                // add alert to array\r\n                this.alerts.push(alert);\r\n\r\n                // auto close alert if required\r\n                if (alert.autoClose) {\r\n                    setTimeout(() => this.removeAlert(alert), 3000);\r\n                }\r\n           });\r\n\r\n        // clear alerts on location change\r\n        this.routeSubscription = this.router.events.subscribe(event => {\r\n            if (event instanceof NavigationStart) {\r\n                this.alertService.clear(this.id);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        // unsubscribe to avoid memory leaks\r\n        this.alertSubscription.unsubscribe();\r\n        this.routeSubscription.unsubscribe();\r\n    }\r\n\r\n    removeAlert(alert: Alert) {\r\n        // check if already removed to prevent error on auto close\r\n        if (!this.alerts.includes(alert)) return;\r\n\r\n        if (this.fade) {\r\n            // fade out alert\r\n            this.alerts.find(x => x === alert).fade = true;\r\n\r\n            // remove alert after faded out\r\n            setTimeout(() => {\r\n                this.alerts = this.alerts.filter(x => x !== alert);\r\n            }, 250);\r\n        } else {\r\n            // remove alert\r\n            this.alerts = this.alerts.filter(x => x !== alert);\r\n        }\r\n    }\r\n\r\n    cssClass(alert: Alert) {\r\n        if (!alert) return;\r\n\r\n        const classes = ['alert', 'alert-dismissable', 'mt-4', 'container'];\r\n                \r\n        const alertTypeClass = {\r\n            [AlertType.Success]: 'alert alert-success',\r\n            [AlertType.Error]: 'alert alert-danger',\r\n            [AlertType.Info]: 'alert alert-info',\r\n            [AlertType.Warning]: 'alert alert-warning'\r\n        }\r\n\r\n        classes.push(alertTypeClass[alert.type]);\r\n\r\n        if (alert.fade) {\r\n            classes.push('fade');\r\n        }\r\n\r\n        return classes.join(' ');\r\n    }\r\n}","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\r\n    <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\r\n    <span [innerHTML]=\"alert.message\"></span>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AccountService } from '../services';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private accountService: AccountService\r\n    ) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const user = this.accountService.userValue;\r\n        if (user) {\r\n            // authorised so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/account/login'], { queryParams: { returnUrl: state.url }});\r\n        return false;\r\n    }\r\n}","import { Component } from '@angular/core';\r\n\r\nimport { AccountService } from './services';\r\nimport { User } from './models';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'my-music-list';\r\n  user: User;\r\n\r\n  constructor(private accountService: AccountService) {\r\n      this.accountService.user.subscribe(x => this.user = x);\r\n  }\r\n\r\n  \r\n}\r\n","<app-header *ngIf=\"user\" [user]=\"user\"></app-header>\r\n\r\n<!-- main app container -->\r\n<div class=\"app-container\" [ngClass]=\"{ 'bg-white': user }\">\r\n    <alert></alert>\r\n    <router-outlet></router-outlet>\r\n</div>","export * from './alert';\r\nexport * from './user';","export class Alert {\r\n    id: string;\r\n    type: AlertType;\r\n    message: string;\r\n    autoClose: boolean;\r\n    keepAfterRouteChange: boolean;\r\n    fade: boolean;\r\n\r\n    constructor(init?:Partial<Alert>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\n//Routing Imports\r\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\r\nimport { JwtInterceptor } from './core/jwt.interceptor';\r\nimport { ErrorInterceptor } from './core/error.interceptor';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './features/home/home.component';\r\nimport { LoginComponent } from './account/login/login.component';\r\nimport { RegisterComponent } from './account/register/register.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { AlertComponent } from './components/alert/alert.component';\r\nimport { HeaderComponent } from './core/header/header.component';\r\nimport { SongsComponent } from './features/songs/songs.component';\r\nimport { MyListComponent } from './features/my-list/my-list.component';\r\nimport { SongDetailComponent } from './features/song-detail/song-detail.component';\r\nimport { RatingModule } from 'ngx-bootstrap/rating';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    routingComponents,\r\n    AlertComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HeaderComponent,\r\n    SongsComponent,\r\n    MyListComponent,\r\n    SongDetailComponent\r\n  ],\r\n  imports: [\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    CommonModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    RatingModule.forRoot(),\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, UrlSegment } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { User } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SongsService {\r\n\r\n  constructor(private router: Router, private http: HttpClient) { }\r\n    // SPOTIFY API CALLS\r\n    getTrack(id) {\r\n      return this.http.post(`${environment.apiUrl}/track/getTrack`, id);\r\n    }\r\n    getUSTop50() {\r\n      return this.http.get(`${environment.apiUrl}/spotify/getUSTop50`);\r\n    }\r\n\r\n    // REVIEWS API CALLS\r\n    getTrackReviews(id) {\r\n      return this.http.post(`${environment.apiUrl}/reviews/getTrackReviews`, id);\r\n    }\r\n\r\n    submitReview(request) {\r\n      return this.http.post(`${environment.apiUrl}/reviews/submitReview`, request);\r\n    }\r\n\r\n    // RATING API CALLS\r\n    submitRating(request) {\r\n      return this.http.post(`${environment.apiUrl}/reviews/submitRating`, request);\r\n    }\r\n\r\n    editRating(request) {\r\n      return this.http.post(`${environment.apiUrl}/reviews/editRating`, request);\r\n    }\r\n\r\n    // USER DATA API CALLS\r\n    getUserSongData(userID) {\r\n      console.log('usersongdata called')\r\n      return this.http.post(`${environment.apiUrl}/reviews/getUserSongData`, userID);\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '../../services';\r\n\r\n@Component({ \r\n    selector: 'app-register',\r\n    templateUrl: 'register.component.html',\r\n    styleUrls: ['register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n    form: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n    password = '';\r\n    confirmPassword = '';\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) {\r\n        // redirect to home if already logged in\r\n        if (this.accountService.userValue) {\r\n            this.router.navigate(['/']);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            email: ['', Validators.required],\r\n            username: ['', Validators.required],\r\n            password: ['', [Validators.required, Validators.minLength(6)]],\r\n        });\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        this.accountService.register(this.form.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    console.log('data: '+JSON.stringify(data));\r\n                    if(data['registered']) { // Successful registration\r\n                        this.alertService.clear();\r\n                        this.alertService.success('Registration successful', { keepAfterRouteChange: true });\r\n                        this.router.navigate(['../login'], { relativeTo: this.route });\r\n                    }\r\n                    else { // Failed registration\r\n                        this.alertService.clear();\r\n                        this.alertService.error(data['message'], { keepAfterRouteChange: true });\r\n                        this.loading = false;\r\n                    }\r\n                    \r\n                },\r\n                error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                });\r\n    }\r\n}\r\n","<div class=\"global-container\">\r\n\t<div class=\"card login-form\">\r\n\t<div class=\"card-body\">\r\n\t\t<h3 class=\"card-title text-center\">Register an account</h3>\r\n\t\t<div class=\"card-text\">\r\n\t\t\t<!--\r\n\t\t\t<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">Incorrect username or password.</div> -->\r\n\t\t\t<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"email\">E-Mail</label>\r\n                    <input type=\"text\" formControlName=\"email\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                    <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.email.errors.required\">E-Mail is required</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"username\">Username</label>\r\n                    <input type=\"text\" formControlName=\"username\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n                    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\">Password</label>\r\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                        <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <button [disabled] = loading type=\"submit\" class=\"btn btn-primary btn-block\">\r\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                        Sign up\r\n                    </button>\r\n                </div>\r\n\r\n                <div class=\"sign-up\">\r\n\t\t\t\t\tAlready have an account? <a routerLink=\"../login\" >Sign in</a>\r\n\t\t\t\t</div>\r\n            </form>\r\n\t\t</div>\r\n\t</div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '../../services';\r\n\r\n\r\n@Component({ \r\n    selector: 'app-login',\r\n    templateUrl: 'login.component.html',\r\n    styleUrls: ['login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n    form: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            username: ['', Validators.required],\r\n            password: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        this.accountService.login(this.f.username.value, this.f.password.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    // get return url from query parameters or default to home page\r\n                    const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n                    this.router.navigateByUrl(returnUrl);\r\n                    console.log('this.accountService.userValue'+JSON.stringify(this.accountService.userValue))\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n}","<div class=\"global-container\">\r\n\t<div class=\"card login-form\">\r\n\t<div class=\"card-body\">\r\n\t\t<h3 class=\"card-title text-center\">Log in to MyMusicList</h3>\r\n\t\t<div class=\"card-text\">\r\n\t\t\t<!--\r\n\t\t\t<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">Incorrect username or password.</div> -->\r\n\t\t\t<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n\t\t\t\t<!-- to error: add class \"has-danger\" -->\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label for=\"exampleIusernamenputEmail1\">Username</label>\r\n\t\t\t\t\t<input formControlName=\"username\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label for=\"exampleInputPassword1\">Password</label>\r\n\t\t\t\t\t<a href=\"#\" style=\"float:right;font-size:12px;\">Forgot password?</a>\r\n\t\t\t\t\t<input type=\"password\" formControlName=\"password\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<button [disabled] = loading type=\"submit\" class=\"btn btn-primary btn-block\">\r\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                    Sign in\r\n                </button>\r\n            </form>\r\n            <div class=\"sign-up\">\r\n                Don't have an account? <a routerLink=\"../register\" >Create One</a>\r\n            </div>\r\n\t\t</div>\r\n\t</div>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { User } from '../models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AccountService {\r\n    private userSubject: BehaviorSubject<User>;\r\n    public user: Observable<User>;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private http: HttpClient\r\n    ) {\r\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\r\n        this.user = this.userSubject.asObservable();\r\n    }\r\n\r\n    public get userValue(): User {\r\n        return this.userSubject.value;\r\n    }\r\n\r\n    login(username, password) {\r\n        return this.http.post<User>(`${environment.apiUrl}/users/authenticate`, { username, password })\r\n            .pipe(map(res => {\r\n                console.log('res: '+JSON.stringify(res));\r\n                if (res['login']) {\r\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                    const user = {\r\n                        id: res['user']['id'],\r\n                        username: res['user']['username']\r\n                    }\r\n                    localStorage.setItem('user', JSON.stringify(user));\r\n                    console.log('user: '+JSON.stringify(user));\r\n                    this.userSubject.next(res['user']);\r\n                    return res['user'];\r\n                } else {\r\n                    throw res['message']\r\n                }\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage and set current user to null\r\n        localStorage.removeItem('user');\r\n        this.userSubject.next(null);\r\n        this.router.navigate(['/login']);\r\n    }\r\n\r\n    register(user: User) {\r\n        return this.http.post(`${environment.apiUrl}/users/register`, user);\r\n    }\r\n\r\n    getUser() {\r\n        return localStorage.getItem('user');\r\n    }\r\n\r\n    getById(id: string) {\r\n        return this.http.get<User>(`${environment.apiUrl}/users/${id}`);\r\n    }\r\n\r\n    update(id, params) {\r\n        return this.http.put(`${environment.apiUrl}/users/${id}`, params)\r\n            .pipe(map(x => {\r\n                // update stored user if the logged in user updated their own record\r\n                if (id == this.userValue.id) {\r\n                    // update local storage\r\n                    const user = { ...this.userValue, ...params };\r\n                    localStorage.setItem('user', JSON.stringify(user));\r\n\r\n                    // publish updated user to subscribers\r\n                    this.userSubject.next(user);\r\n                }\r\n                return x;\r\n            }));\r\n    }\r\n\r\n    delete(id: string) {\r\n        return this.http.delete(`${environment.apiUrl}/users/${id}`)\r\n            .pipe(map(x => {\r\n                // auto logout if the logged in user deleted their own record\r\n                if (id == this.userValue.id) {\r\n                    this.logout();\r\n                }\r\n                return x;\r\n            }));\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\n\r\n// Mat Imports \r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\nconst MaterialComponents = [\r\n  MatButtonModule\r\n]\r\n\r\n@NgModule({\r\n  imports: [MatButtonModule],\r\n  exports: [MatButtonModule]\r\n})\r\nexport class MaterialModule { }\r\n","export * from './account.service';\r\nexport * from './alert.service';\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-my-list',\r\n  templateUrl: './my-list.component.html',\r\n  styleUrls: ['./my-list.component.css']\r\n})\r\nexport class MyListComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>my-list works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './features/home/home.component'\r\nimport { LoginComponent } from './account/login/login.component'\r\nimport { RegisterComponent } from './account/register/register.component'\r\nimport { AuthGuard } from './core/auth.guard';\r\nimport { SongsComponent } from './features/songs/songs.component';\r\nimport { SongDetailComponent } from './features/song-detail/song-detail.component';\r\nimport { MyListComponent } from './features/my-list/my-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent, canActivate: [AuthGuard] },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'songs', component: SongsComponent },\r\n  { path: 'myList', component: MyListComponent },\r\n  { path: 'track/:id', component: SongDetailComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\r\nexport const routingComponents = [HomeComponent, LoginComponent]","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AccountService } from '../services';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if ([401, 403].includes(err.status) && this.accountService.userValue) {\r\n                // auto logout if 401 or 403 response returned from api\r\n                this.accountService.logout();\r\n            }\r\n\r\n            const error = err.error?.message || err.statusText;\r\n            console.error(err);\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}